{"version":3,"sources":["test-babel.js"],"names":[],"mappings":";;;;AAAA;;AAEA;AACA,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,GAAV,CAAc,UAAC,CAAD;AAAA,WAAO,IAAI,CAAX;AAAA,CAAd;;AAEA,IAAI,aAAa,YAAW;AACxB;;AACA,QAAI,OAAO,SAAP,IAAO,GAAU,CAAE,CAAvB;;AAEA,WAAO;AACH,cAAM;AADH,KAAP;AAGH,CAPgB,EAAjB;;AAUA;AACI,QAAI,SAAO,SAAP,MAAO,GAAU,CAAE,CAAvB;AACH;;AAED,QAAQ,GAAR,CAAY,IAAZ;AACA,QAAQ,GAAR,CAAY,KAAZ;AACA,QAAQ,GAAR,CAAY,MAAZ;;AAGA,SAAS,CAAT,GAAa;AACT,YAAQ,GAAR,CAAY,KAAZ;AACH;;AAED,SAAS,CAAT,GAAa;AAAC,WAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AAAkB;;SAEhB,G;;;;;IAAX,C,wBAAI,G;aAEiB,O;;;;IAAnB,E;IAAI,E;IAAI,C;IAAG,C;IAAG,C;;AAErB;AACA;;AAEA;;AACA,SAAS,IAAT,GAAuC;AAAA,mFAAR,EAAC,GAAG,CAAJ,EAAQ;;AAAA,sBAAxB,CAAwB;AAAA,QAAxB,CAAwB,0BAApB,CAAoB;AAAA,sBAAjB,CAAiB;AAAA,QAAjB,CAAiB,0BAAb,CAAa;;AACnC,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACH;AACD,KAAK,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAL,E,CAAoB;AACpB,KAAK,EAAC,GAAG,CAAJ,EAAL,E,CAAc;AACd,O,CAAQ;AACR,KAAK,EAAL,E,CAAU;;AAEV;AACA,SAAS,KAAT,QAA+B;AAAA,wBAAf,CAAe;AAAA,QAAf,CAAe,2BAAX,CAAW;AAAA,wBAAR,CAAQ;AAAA,QAAR,CAAQ,2BAAJ,CAAI;;AAC3B,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACH;;AAED,MAAM,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAN,E,CAAqB;AACrB,MAAM,EAAC,GAAG,CAAJ,EAAN,E,CAAe;AACf,Q,CAAS;AACT,KAAK,EAAL,E,CAAU;;AAEV;AACA,SAAS,KAAT,GAAwC;AAAA,oFAAhB,EAAE,GAAG,CAAL,EAAQ,GAAG,CAAX,EAAgB;;AAAA,QAAxB,CAAwB,SAAxB,CAAwB;AAAA,QAArB,CAAqB,SAArB,CAAqB;;AACpC,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACH;;AAED,MAAM,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAN,E,CAAqB;AACrB,MAAM,EAAC,GAAG,CAAJ,EAAN,E,CAAe;AACf,Q,CAAS;AACT,MAAM,EAAN,E,CAAW;;AAEX,IAAI,KAAK,CAAT;AAAA,IAAY,KAAK,CAAjB;YACW,CAAC,EAAD,EAAK,EAAL,C;AAAV,E;AAAI,E;;;AAEL,SAAS,EAAT,QAAuB;AAAA;;AAAA,QAAV,CAAU;AAAA,QAAP,CAAO;AAAA,QAAJ,CAAI;AAAE;AACzB,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAH","file":"test-babel-compiled.js","sourcesContent":["import 'babel-polyfill';\r\n\r\n// 调用babel test-babel.js --presets es2015，即可转为ES5代码\r\n[1, 2, 3].map((x) => x * x);\r\n\r\nvar someModule = function() {\r\n    \"use strict\";\r\n    var init = function(){};\r\n\r\n    return {\r\n        init: init\r\n    }\r\n}();\r\n\r\n\r\n{\r\n    let init = function(){};\r\n};\r\n\r\nconsole.log(init);\r\nconsole.log(_init);\r\nconsole.log(_init2);\r\n\r\n\r\nfunction f() {\r\n    console.log('aaa');\r\n}\r\n\r\nfunction a() {return [1, 2, 3];}\r\n\r\nlet [x = f()] = a();\r\n\r\nconst [aa, bb, c, d, e] = 'hello';\r\n\r\n// 我们考虑创建一个函数，他不允许参数为undefined，即没有传参，如果不为undefined了，他还不允许参数没有x或者\r\n// y属性，如果没有，就采用默认值\r\n\r\n// 这种相当于2道关卡，要传入的参数不是undefined，并且他有x和y属性，才会返回成功\r\nfunction move({x = 0, y = 0} = {x: 1}) {\r\n    return [x, y];\r\n}\r\nmove({x: 3, y: 8}); // [3, 8]\r\nmove({x: 3}); // [3, 0]\r\nmove(); // [1, 0]\r\nmove({}); // [0, 0]\r\n\r\n// 这种相当于1道关卡，只要有x和y属性，就会返回成功，但是忽略掉了参数本身是undefiend的情况（move2()）\r\nfunction move2({x = 0, y = 0}) {\r\n    return [x, y];\r\n}\r\n\r\nmove2({x: 3, y: 8}); // [3, 8]\r\nmove2({x: 3}); // [3, 0]\r\nmove2(); // Cannot match against 'undefined' or 'null'\r\nmove({}); // [0, 0]\r\n\r\n// 这种相当于1道关卡，只要参数本身不是undefined，就会去返回，但是忽略了参数没有x或者y属性的情况\r\nfunction move3({x, y} = { x: 0, y: 0 }) {\r\n    return [x, y];\r\n}\r\n\r\nmove3({x: 3, y: 8}); // [3, 8]\r\nmove3({x: 3}); // [3, undefined]\r\nmove3(); // [0, 0]\r\nmove3({}); // [undefined, undefined]\r\n\r\nlet x1 = 1, y1 = 2;\r\n[x1, y1] = [y1, x1];\r\n\r\nfunction f1([x, y, z]) {}\r\nf1([1, 2, 3]);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}